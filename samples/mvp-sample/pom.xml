<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>samples-parent-pom</artifactId>
		<groupId>org.vaadin.spring.samples</groupId>
		<version>0.0.3-SNAPSHOT</version>
	</parent>

	<artifactId>mvp-sample</artifactId>
	<packaging>war</packaging>

	<name>Vaadin4Spring Samples - MVP</name>
	<description>An application to demonstrate Spring Boot Vaadin MVP in action</description>

	<developers>
		<developer>
			<name>Chris Phillipson</name>
			<email>fastnsilver@gmail.com</email>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<start-class>com.esca.mui.ui.Application</start-class>
		
		<apache.commons-collections.version>4.0</apache.commons-collections.version>
		<apache.commons-lang3.version>3.3.2</apache.commons-lang3.version>
		<gson.version>2.2.4</gson.version>
		<java.version>1.7</java.version>
		<javax.inject.version>1</javax.inject.version>
		<vaadin.version>7.3.0.beta1</vaadin.version>
		<vaadin.boot.version>0.0.3-SNAPSHOT</vaadin.boot.version>
		<vaadin.plugin.version>${vaadin.version}</vaadin.plugin.version>
	</properties>

	<dependencies>
		<!-- JSR-330 API (e.g., @Inject) -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>${javax.inject.version}</version>
		</dependency>
		
		<!-- Google JSON library -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>

        <!-- Joda time -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        
        <!-- Apache Commons -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${apache.commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${apache.commons-collections.version}</version>
        </dependency>

        <dependency>
            <groupId>org.vaadin.spring</groupId>
            <artifactId>spring-boot-vaadin</artifactId>
        </dependency>
		<dependency>
			<groupId>org.vaadin.spring</groupId>
			<artifactId>spring-vaadin-mvp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client-compiled</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-push</artifactId>
		</dependency>
		<dependency>
			<groupId>org.vaadin.spring</groupId>
			<artifactId>spring-vaadin-test</artifactId>
			<version>${vaadin.boot.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- 
		  Needed when using the widgetset optimizer (custom ConnectorBundleLoaderFactory). 
		  For widgetset compilation, vaadin-client-compiler is automatically added 
		  on the compilation classpath by vaadin-maven-plugin so normally there is 
		  no need for an explicit dependency. 
		-->
		<!-- 
		  <dependency> 
		      <groupId>com.vaadin</groupId> 
		      <artifactId>vaadin-client-compiler</artifactId> 
		      <version>${vaadin.version}</version> 
		      <scope>provided</scope> 
		  </dependency> 
		-->
	</dependencies>

	<build>
		<plugins>
			<!-- As we are doing "inplace" GWT compilation, ensure the widgetset -->
			<!-- directory is cleaned properly -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/webapp/VAADIN/widgetsets</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.plugin.version}</version>
				<configuration>
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<webappDirectory>${basedir}/src/main/webapp/VAADIN/widgetsets
					</webappDirectory>
					<hostedWebapp>${basedir}/src/main/webapp/VAADIN/widgetsets
					</hostedWebapp>
					<persistentunitcachedir>${project.build.directory}</persistentunitcachedir>
					<deploy>${project.build.directory}/gwt-deploy</deploy>
					<compileReport>false</compileReport>
					<noServer>true</noServer>
					<draftCompile>false</draftCompile>
					<style>OBF</style>
					<strict>true</strict>
					<runTarget>http://localhost:8080/</runTarget>
				</configuration>
				<executions>
					<execution>
						<configuration>
						</configuration>
						<goals>
							<goal>clean</goal>
							<goal>resources</goal>
							<goal>update-theme</goal>
							<goal>update-widgetset</goal>
							<goal>compile-theme</goal>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
